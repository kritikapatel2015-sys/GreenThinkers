import streamlit as st
import torch
from PIL import Image
import torchvision.transforms as transforms
from torchvision import models

# ----------------------------
# ЁЯМ┐ Page Configuration
# ----------------------------
st.set_page_config(
    page_title="Green Thinkers ЁЯМ▒",
    page_icon="ЁЯМ┐",
    layout="wide"
)

# ----------------------------
# ЁЯОи Custom Styles
# ----------------------------
st.markdown("""
<style>
body {
    background: linear-gradient(120deg, #e8f5e9, #c8e6c9);
    font-family: "Segoe UI", sans-serif;
}
.card {
    background-color: #ffffff;
    border-radius: 15px;
    padding: 20px;
    margin: 10px 0;
    box-shadow: 0px 4px 10px rgba(0,0,0,0.15);
}
.risk-low {color: green; font-weight: bold;}
.risk-medium {color: orange; font-weight: bold;}
.risk-high {color: red; font-weight: bold;}
h1, h2, h3, h4 { color: #2e7d32; }
.sidebar .sidebar-content {
    background: linear-gradient(180deg, #a5d6a7, #81c784);
}
footer {visibility: hidden;}
</style>
""", unsafe_allow_html=True)

# ----------------------------
# ЁЯМ┐ Header
# ----------------------------
st.markdown("""
<h1 style='text-align:center;'>ЁЯМ┐ Green Thinkers</h1>
<h4 style='text-align:center;color:#388e3c;'>AI-Based Plant Disease Detection | рдПрдЖрдИ рдЖрдзрд╛рд░рд┐рдд рдкреМрдз рд░реЛрдЧ рдкрд╣рдЪрд╛рди</h4>
""", unsafe_allow_html=True)
st.markdown("---")

# ----------------------------
# ЁЯМР Sidebar
# ----------------------------
st.sidebar.image("https://cdn-icons-png.flaticon.com/512/2909/2909767.png", width=100)
st.sidebar.markdown("## ЁЯМ╛ About")
st.sidebar.info("""
**Green Thinkers** is an AI-based agricultural assistant that helps farmers identify 
plant diseases and provides treatment, prevention, and seasonal awareness in **English and Hindi**.
""")

language = st.sidebar.radio(
    "Select Language / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:",
    ("English", "рд╣рд┐рдиреНрджреА")
)

# ----------------------------
# ЁЯУ╕ Upload Section
# ----------------------------
upload_text = "ЁЯУ╖ Upload a Leaf Image" if language == "English" else "ЁЯУ╖ рдкрддреНрддреА рдХреА рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ"
uploaded_file = st.file_uploader(upload_text, type=["jpg", "jpeg", "png"])

# ----------------------------
# ЁЯза Load Model
# ----------------------------
@st.cache_resource
def load_model():
    model = models.resnet18(pretrained=True)
    model.fc = torch.nn.Linear(model.fc.in_features, 10)
    model.eval()
    return model

model = load_model()

# ----------------------------
# ЁЯМ╛ Disease Information
# ----------------------------
DISEASE_DATA_EN = {
    "Apple Scab": {
        "about": "Fungal disease caused by *Venturia inaequalis*, affecting apple leaves and fruits.",
        "symptoms": [
            "Olive-green or brown leaf spots",
            "Cracked fruit skin and distorted shape",
            "Premature leaf drop"
        ],
        "treatment": [
            "Spray Mancozeb or Captan every 10тАУ15 days",
            "Prune infected branches",
            "Avoid overhead irrigation"
        ],
        "prevention": [
            "Ensure proper air circulation between trees",
            "Avoid dense planting",
            "Use resistant apple varieties"
        ],
        "season": "High risk during **spring and early summer** (MarchтАУJune)",
        "risk": "ЁЯЯб Moderate"
    },
    "Apple Black Rot": {
        "about": "Caused by *Botryosphaeria obtusa*, leading to black leaf spots and fruit rot.",
        "symptoms": [
            "Dark circular spots with brown margins",
            "Mummified fruits remain on tree",
            "Cankers on bark"
        ],
        "treatment": [
            "Remove infected fruits and branches",
            "Apply copper-based fungicides",
            "Ensure airflow within canopy"
        ],
        "prevention": [
            "Avoid pruning during wet weather",
            "Disinfect tools after pruning",
            "Apply protective fungicides before rainfall"
        ],
        "season": "High risk during **monsoon and humid periods** (JulyтАУSeptember)",
        "risk": "ЁЯФ┤ High"
    },
    "Healthy": {
        "about": "Your plant looks healthy! Keep maintaining good practices.",
        "symptoms": [
            "Green leaves with no spots",
            "Smooth fruit surface",
            "No wilting or yellowing"
        ],
        "treatment": ["No treatment required тАФ continue routine care."],
        "prevention": [
            "Use organic compost",
            "Water plants early morning",
            "Keep monitoring for pests"
        ],
        "season": "All seasons safe ЁЯМ┐",
        "risk": "ЁЯЯв Low"
    }
}

DISEASE_DATA_HI = {
    "рдПрдкреНрдкрд▓ рд╕реНрдХреИрдм": {
        "about": "*Venturia inaequalis* рдлрдлреВрдВрдж рд╕реЗ рд╣реЛрдиреЗ рд╡рд╛рд▓рд╛ рд░реЛрдЧ, рдЬреЛ рдкрддреНрддрд┐рдпреЛрдВ рдФрд░ рдлрд▓реЛрдВ рдХреЛ рдкреНрд░рднрд╛рд╡рд┐рдд рдХрд░рддрд╛ рд╣реИред",
        "symptoms": [
            "рдкрддреНрддрд┐рдпреЛрдВ рдкрд░ рдЬреИрддреВрдиреА рдпрд╛ рднреВрд░реЗ рдзрдмреНрдмреЗ",
            "рдлрд▓реЛрдВ рдХреА рддреНрд╡рдЪрд╛ рдкрд░ рджрд░рд╛рд░реЗрдВ рдФрд░ рд╡рд┐рдХреГрддрд┐",
            "рд╕рдВрдХреНрд░рдордг рд╕реЗ рдкрддреНрддрд┐рдпрд╛рдБ рдЬрд▓реНрджреА рдЭрдбрд╝ рдЬрд╛рддреА рд╣реИрдВ"
        ],
        "treatment": [
            "рд╣рд░ 10тАУ15 рджрд┐рди рдореЗрдВ Mancozeb рдпрд╛ Captan рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВ",
            "рд╕рдВрдХреНрд░рдорд┐рдд рд╢рд╛рдЦрд╛рдПрдБ рдХрд╛рдЯреЗрдВ",
            "рдКрдкрд░ рд╕реЗ рдкрд╛рдиреА рджреЗрдиреЗ рд╕реЗ рдмрдЪреЗрдВ"
        ],
        "prevention": [
            "рдкреЗрдбрд╝реЛрдВ рдХреЗ рдмреАрдЪ рдЙрдЪрд┐рдд рджреВрд░реА рд░рдЦреЗрдВ",
            "рдШрдиреА рдмрд╛рдЧрд╡рд╛рдиреА рд╕реЗ рдмрдЪреЗрдВ",
            "рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЗрдВ рд▓рдЧрд╛рдПрдБ"
        ],
        "season": "**рд╡рд╕рдВрдд рдФрд░ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЧрд░реНрдореА** (рдорд╛рд░реНрдЪтАУрдЬреВрди) рдХреЗ рджреМрд░рд╛рди рдЙрдЪреНрдЪ рдЬреЛрдЦрд┐рдо",
        "risk": "ЁЯЯб рдордзреНрдпрдо"
    },
    "рдПрдкреНрдкрд▓ рдмреНрд▓реИрдХ рд░реЙрдЯ": {
        "about": "*Botryosphaeria obtusa* рдлрдлреВрдВрдж рд╕реЗ рд╣реЛрдиреЗ рд╡рд╛рд▓рд╛ рд░реЛрдЧ, рдЬреЛ рдкрддреНрддрд┐рдпреЛрдВ рдФрд░ рдлрд▓реЛрдВ рдХреЛ рд╕рдбрд╝рд╛ рджреЗрддрд╛ рд╣реИред",
        "symptoms": [
            "рднреВрд░реЗ рдХрд┐рдирд╛рд░реЗ рд╡рд╛рд▓реЗ рдЧрд╣рд░реЗ рдзрдмреНрдмреЗ",
            "рд╕реВрдЦреЗ рд╣реБрдП рдлрд▓ рдкреЗрдбрд╝ рдкрд░ рд▓рдЯрдХрддреЗ рд░рд╣рддреЗ рд╣реИрдВ",
            "рдЫрд╛рд▓ рдкрд░ рдШрд╛рд╡ рдФрд░ рджрд░рд╛рд░реЗрдВ"
        ],
        "treatment": [
            "рд╕рдВрдХреНрд░рдорд┐рдд рдлрд▓ рдФрд░ рд╢рд╛рдЦрд╛рдПрдБ рд╣рдЯрд╛рдПрдБ",
            "рдХреЙрдкрд░ рдлрдлреВрдВрджрдирд╛рд╢реА рдЫрд┐рдбрд╝рдХреЗрдВ",
            "рдкреЗрдбрд╝реЛрдВ рдореЗрдВ рд╡рд╛рдпреБ рд╕рдВрдЪрд╛рд░ рдмрдирд╛рдП рд░рдЦреЗрдВ"
        ],
        "prevention": [
            "рдмрд░рд╕рд╛рдд рдореЗрдВ рдЫрдВрдЯрд╛рдИ рд╕реЗ рдмрдЪреЗрдВ",
            "рдЙрдкрдХрд░рдгреЛрдВ рдХреЛ рд╕рдВрдХреНрд░рдордгрдореБрдХреНрдд рдХрд░реЗрдВ",
            "рдмрд░рд╕рд╛рдд рд╕реЗ рдкрд╣рд▓реЗ рдлрдлреВрдВрджрдирд╛рд╢реА рдЫрд┐рдбрд╝рдХреЗрдВ"
        ],
        "season": "**рдорд╛рдирд╕реВрди рдФрд░ рдЖрд░реНрджреНрд░ рдореМрд╕рдо** (рдЬреБрд▓рд╛рдИтАУрд╕рд┐рддрдВрдмрд░) рдореЗрдВ рдЙрдЪреНрдЪ рдЬреЛрдЦрд┐рдо",
        "risk": "ЁЯФ┤ рдЙрдЪреНрдЪ"
    },
    "рд╕рдВрдкреВрд░реНрдг рд╕реНрд╡рд╕реНрде": {
        "about": "рдЖрдкрдХрд╛ рдкреМрдзрд╛ рд╕реНрд╡рд╕реНрде рд╣реИ! ЁЯМ┐",
        "symptoms": ["рдкрддреНрддрд┐рдпрд╛рдБ рд╣рд░реА рдФрд░ рдЪрдордХрджрд╛рд░ рд╣реИрдВ", "рдХреЛрдИ рдзрдмреНрдмреЗ рдирд╣реАрдВ рджрд┐рдЦрддреЗ", "рдлрд▓ рд╕рд╛рдорд╛рдиреНрдп рд╣реИрдВ"],
        "treatment": ["рдХреЛрдИ рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдирд╣реАрдВред"],
        "prevention": [
            "рдЬреИрд╡рд┐рдХ рдЦрд╛рдж рдбрд╛рд▓реЗрдВ",
            "рд╕реБрдмрд╣ рдЬрд▓реНрджреА рдкрд╛рдиреА рджреЗрдВ",
            "рдХреАрдЯреЛрдВ рдХреА рдирд┐рдпрдорд┐рдд рдЬрд╛рдВрдЪ рдХрд░реЗрдВ"
        ],
        "season": "рд╕рднреА рдореМрд╕рдореЛрдВ рдореЗрдВ рд╕реБрд░рдХреНрд╖рд┐рдд ЁЯМ┐",
        "risk": "ЁЯЯв рдХрдо"
    }
}

# ----------------------------
# ЁЯФН Prediction Section
# ----------------------------
if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="ЁЯМ┐ " + ("Uploaded Leaf" if language == "English" else "рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рдкрддреНрддреА"), use_column_width=True)

    transform = transforms.Compose([
        transforms.Resize((224, 224)),
        transforms.ToTensor()
    ])
    input_tensor = transform(image).unsqueeze(0)

    with torch.no_grad():
        outputs = model(input_tensor)
        _, pred_idx = torch.max(outputs, 1)

    class_en = list(DISEASE_DATA_EN.keys())
    class_hi = list(DISEASE_DATA_HI.keys())
    pred_en = class_en[pred_idx.item() % len(class_en)]
    pred_hi = class_hi[pred_idx.item() % len(class_hi)]

    st.markdown("---")
    st.markdown("### ЁЯзм " + ("Diagnosis Report" if language == "English" else "рдирд┐рджрд╛рди рд░рд┐рдкреЛрд░реНрдЯ"))

    if language == "English":
        info = DISEASE_DATA_EN[pred_en]
        st.success(f"ЁЯй║ Disease Detected: {pred_en}")
        st.markdown(f"<div class='card'><b>About:</b> {info['about']}</div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>Symptoms:</b><ul>" + "".join([f'<li>{s}</li>' for s in info['symptoms']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>Treatment:</b><ul>" + "".join([f'<li>{t}</li>' for t in info['treatment']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>Prevention Tips:</b><ul>" + "".join([f'<li>{p}</li>' for p in info['prevention']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown(f"<div class='card'><b>ЁЯМд Seasonal Risk:</b> {info['season']} (<span class='risk-{ 'high' if 'High' in info['risk'] else 'medium' if 'Moderate' in info['risk'] else 'low'}'>{info['risk']}</span>)</div>", unsafe_allow_html=True)

    else:
        info = DISEASE_DATA_HI[pred_hi]
        st.success(f"ЁЯй║ рдкрд╣рдЪрд╛рдирд╛ рдЧрдпрд╛ рд░реЛрдЧ: {pred_hi}")
        st.markdown(f"<div class='card'><b>рд╡рд┐рд╡рд░рдг:</b> {info['about']}</div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>рд▓рдХреНрд╖рдг:</b><ul>" + "".join([f'<li>{s}</li>' for s in info['symptoms']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>рдЙрдкрдЪрд╛рд░:</b><ul>" + "".join([f'<li>{t}</li>' for t in info['treatment']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown("<div class='card'><b>рд░реЛрдХрдерд╛рдо рдХреЗ рдЙрдкрд╛рдп:</b><ul>" + "".join([f'<li>{p}</li>' for p in info['prevention']]) + "</ul></div>", unsafe_allow_html=True)
        st.markdown(f"<div class='card'><b>ЁЯМд рдореМрд╕рдореА рдЬреЛрдЦрд┐рдо:</b> {info['season']} (<span class='risk-{ 'high' if 'рдЙрдЪреНрдЪ' in info['risk'] else 'medium' if 'рдордзреНрдпрдо' in info['risk'] else 'low'}'>{info['risk']}</span>)</div>", unsafe_allow_html=True)

# ----------------------------
# ЁЯМ┐ Footer
# ----------------------------
st.markdown("---")
st.markdown("<p style='text-align:center;color:#1b5e20;'>ЁЯМ┐ Developed by Green Thinkers | Empowering Smart Agriculture ЁЯМ╛</p>", unsafe_allow_html=True)
